---

# Copyright 2018, TCMC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Check if all variables required to create the VM are defined
- name: spin_vm - Include vm_pre_flight_check.yml ({{ vm.name }})
  include: vm_pre_flight_check.yml

- name: spin_vm - Gather Facts about VMs
  include: "vm_facts.yml"


- name: spin_vm - Set fact vm_subdir ({{ vm.name }})
  set_fact:
    vm_subdir: "/var/lib/libvirt/{{ vm.libvirt_pool }}/instances/{{ vm.name }}"

- name: spin_vm - Create Subdirectory ({{ vm.name }})
  file:
   path: "{{ vm_subdir }}"
   owner: libvirt-qemu
   group: kvm
   mode: 0755
   state: directory

- name: spin_vm - Set fact vm_tmp_subdir ({{ vm.name }})
  set_fact:
    vm_tmp_subdir: "/var/lib/libvirt/{{ vm.libvirt_pool }}/tmp/{{ vm.name }}"

- name: spin_vm - Create TMP Subdirectory ({{ vm.name }})
  file:
   path: "{{ vm_tmp_subdir }}"
   owner: libvirt-qemu
   group: kvm
   mode: 0755
   state: directory


- name: spin_vm - Include create_disk.yml
  include: create_disk.yml
  with_items: "{{ vm.devices.disks }}"
  loop_control:
    loop_var: disk
  when:
  - vm_exists == False

- name: spin_vm - Include create_cdrom.yml
  include: create_cdrom.yml
  with_items: "{{ vm.devices.cdroms }}"
  loop_control:
    loop_var: cdrom
  when:
  - vm_exists == False
  - vm.devices.cdroms is defined


- name: spin_vm - Copy VM's private NVRAM ({{ vm.name }}_VARS.fd)
  synchronize:
    src: "/usr/share/OVMF/OVMF_VARS.fd"
    dest: "{{ vm_subdir }}/nvram-{{ vm.name }}_VARS.fd"
    rsync_opts:
    - "--ignore-existing"
  when:
  - vm_exists == False
  - vm.firmware is defined
  - vm.firmware == 'efi'

- name: spin_vm - Set file permissions for "{{ vm.name }}_VARS.fd"
  file:
    path: "{{ vm_subdir }}/nvram-{{ vm.name }}_VARS.fd"
    owner: libvirt-qemu
    group: kvm
    mode: 0640
  when:
  - vm_exists == False
  - vm.firmware is defined
  - vm.firmware == 'efi'


- name: spin_vm - Define ({{ vm.name }})
  virt:
    name: "{{ vm.name }}"
    command: define
    xml: "{{ lookup('template', 'vm-template.xml.j2') }}"
  when: vm_exists == False

- name: spin_vm - Set ({{ vm.name }}) to AutoStart
  shell: virsh autostart "{{ vm.name }}"
  when: vm_exists == False

- name: spin_vm - Start ({{ vm.name }})
  shell: virsh start "{{ vm.name }}"
  when:
  - vm_exists == false
  - vm.start is defined and vm.start
  ignore_errors: true
