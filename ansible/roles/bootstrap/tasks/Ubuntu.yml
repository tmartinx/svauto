---

# Copyright 2020, TCMC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: ubuntu - copy sudoers config file for members of group "sudo"
  copy:
    src: ubuntu-common/sudo-group
    dest: /etc/sudoers.d/sudo-group
    owner: root
    group: root
    mode: 0644


- name: ubuntu - Copy Ubuntu's default sources.list
  template:
    src: ubuntu-common/sources.list.j2
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: 0644


- name: ubuntu - apt Installing Cloud Archive Keyring
  apt:
    update_cache: yes
    state: latest
    pkg: ubuntu-cloud-keyring


- name: ubuntu - apt install very basic tools
  apt:
    state: latest
    pkg:
    - ssh
    - curl
    - tmux
    - nftables
    - iptables
    - arptables
    - ebtables


- name: ubuntu - include custom book
  include: "{{ ansible_distribution_release }}.yml"
  when: ansible_distribution_release == "bionic" or ansible_distribution_release == "focal"


# Workaround bug: LP#759725
# https://bugs.launchpad.net/ubuntu/+source/linux/+bug/759725
#
# Affects:
# https://bugs.launchpad.net/ubuntu/+source/libguestfs/+bug/1813662
# https://opendev.org/openstack/openstack-ansible-os_nova/commit/7ad805df1fcb18f00d8848acd5a471355c3a1e52
- name: ubuntu - copy Ubuntu's workaround for bug LP-759725
  copy:
    src: "ubuntu-common/fix-damn-bug-759725-{{ ansible_distribution_release }}"
    dest: /etc/kernel/postinst.d/fix-damn-bug-759725
    owner: root
    group: root
    mode: 0755


- name: ubuntu - apt full-upgrade
  apt:
    upgrade: dist
  when: metal_deployment.base_os_upgrade


- name: ubuntu - apt install Linux
  apt:
    state: latest
    pkg:
    - linux-generic
    - linux-headers-generic
  when:
  - ansible_virtualization_type != 'lxc'
  - ansible_virtualization_role == 'host' or (ansible_virtualization_role == 'guest' and mode == 'desktop')


- name: ubuntu - apt install minimum tools
  apt:
    state: latest
    pkg:
    - ssh
    - zip
    - curl
    - tmux
    - pigz
    - lshw
    - flip
    - unzip
    - man-db
    - psmisc
    - tzdata
    - sysstat
    - tcpdump
    - mlocate
    - sshpass
    - xfsprogs
    - nftables
    - iptables
    - ppa-purge
    - traceroute
    - btrfs-progs
    - ecryptfs-utils
    - command-not-found
    - popularity-contest
    - apt-transport-https
    - ubuntu-cloud-keyring
    - software-properties-common


- name: ubuntu - apt install network tools
  apt:
    state: latest
    pkg:
    - cbm
    - lftp
    - bmon
    - nmap
    - vlan
    - ipfm
    - socat
    - ipset
    - ngrep
    - iftop
    - nload
    - lldpd
    - netcat
    - telnet
    - iperf3
    - tshark
    - ifstat
    - tcpick
    - bwm-ng
    - openssl
    - pktstat
    - netperf
    - nethogs
    - tcptrack
    - ostinato
    - conntrack
    - net-tools
    - tcpreplay
    - iptraf-ng
    - subnetcalc
    - nbd-client
    - bind9utils
    - speedometer
    - speedtest-cli
  when: network_tools


- name: ubuntu - apt install extra packages
  apt:
    state: latest
    pkg:
    - jq
    - pv
    - mc
    - gpm
    - git
    - zsh
    - htop
    - gpart
    - gdisk
    - iotop
    - patch
    - byobu
    - monit
    - figlet
    - strace
    - ltrace
    - logtop
    - numactl
    - ansible
    - aptitude
    - pm-utils
    - gddrescue
    - virtualenv
    - sysfsutils
    - genisoimage
    - build-essential
    - silversearcher-ag
  when: extra_packages and (mode == 'server' or mode == 'desktop')


- name: ubuntu - apt install Packer
  apt:
    state: latest
    pkg:
    - packer
    install_recommends: no
  when: extra_packages


- name: ubuntu - apt install atop
  apt:
    state: latest
    pkg: atop
  when: extra_packages and (mode == 'server' or mode == 'desktop') and ansible_virtualization_type != 'lxc'


- name: ubuntu - update popularity-contest config
  lineinfile:
    path: /etc/popularity-contest.conf
    regexp: "^PARTICIPATE=.*"
    line: "PARTICIPATE=\"yes\""

- name: ubuntu - update popularity-contest config
  shell: dpkg-reconfigure --frontend noninteractive popularity-contest


- name: ubuntu - apt install ZRAM Config
  apt:
    state: latest
    pkg: zram-config
  when: (zram is defined and zram) and ansible_virtualization_type != 'lxc'


- name: ubuntu - apt install Server tools
  apt:
    state: latest
    pkg:
      - vim-nox
      - mtr-tiny
  when: mode == 'server'


- name: ubuntu - dpkg enabling MultiArch on Desktops
  shell: dpkg --add-architecture i386
  when:
  - mode == 'desktop'
  - ansible_distribution_release == "bionic"


# The desktop_environments var is an array, like:
#
# desktop_environments: [ 'ubuntu-desktop', 'ubuntu-mate-desktop' ]
#
# So, it will install two DEs, regular Ubuntu and MATE on the same Machine.
#
- name: ubuntu - apt install Desktop Environments
  apt:
    state: latest
    pkg: "{{ desktop_environments }}"
  when: mode == 'desktop' and desktop_environments is defined


- name: ubuntu - apt install Desktop tools
  apt:
    state: latest
    pkg:
    - vim
    - mtr
    - vlc
    - cups
    - meld
    - clipit
    - kdiff3
    - xine-ui
    - flatpak
    - gparted
    - remmina
    - firefox
    - rdesktop
    - filezilla
    - evolution
    - mesa-utils
    - terminator
    - ssh-askpass
    - default-jre
    - samba-common
    - wireshark-qt
    - libgconf-2-4
    - freerdp2-x11
    - evolution-ews
    - gnome-software
    - tigervnc-viewer
    - gnome-tweak-tool
    - chromium-browser
    - freerdp2-wayland
    - firefox-locale-en
    - remmina-plugin-nx
    - remmina-plugin-www
    - remmina-plugin-exec
    - remmina-plugin-xdmcp
    - remmina-plugin-spice
    - classicmenu-indicator
    - libcanberra-gtk-module
    - ubuntu-restricted-extras
    - gnome-software-plugin-flatpak
    - compizconfig-settings-manager
  when: mode == 'desktop'


- name: ubuntu - apt install Desktop libraries (WebEx)
  apt:
    state: latest
    pkg:
    - libxmu6:i386
    - libxft2:i386
    - libgtk2.0-0:i386
    - libpangox-1.0-0:i386
    - libpangoxft-1.0-0:i386
    - libpangoft2-1.0-0:i386
  when:
  - mode == 'desktop'
  - ansible_distribution_release == "bionic"


- name: ubuntu - copy root's htop config directory
  file:
    path: /root/.config/htop
    state: directory

- name: ubuntu - copy root's htoprc config file
  copy:
    src: ubuntu-common/htoprc.j2
    dest: /root/.config/htop/htoprc
    owner: root
    group: root
    mode: 0644


# vimrc file, workaround to bug:
# https://bugs.launchpad.net/ubuntu/+source/vim/+bug/1767314
- name: ubuntu - copy root's vimrc config file
  copy:
    src: ubuntu-common/vimrc
    dest: /root/.vimrc
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution_release == "bionic"

- name: ubuntu - copy "{{ metal_deployment.default_user }}"s vimrc config file
  copy:
    src: ubuntu-common/vimrc
    dest: /home/{{ metal_deployment.default_user }}/.vimrc
    owner: "{{ metal_deployment.default_user }}"
    group: "{{ metal_deployment.default_user }}"
    mode: 0644
  when: ansible_distribution_release == "bionic"


- name: ubuntu - vim-nox as default for editor
  alternatives:
    name: editor
    path: /usr/bin/vim.nox
  when: mode == 'server'


- name: ubuntu - vim as default for editor
  alternatives:
    name: editor
    path: /usr/bin/vim
  when: mode == 'desktop'


- name: ubuntu - group add regular system user to know Server groups
  user:
    name: "{{ metal_deployment.default_user }}"
    groups: adm,dialout,cdrom,floppy,sudo,dip,plugdev
    append: yes
  when: mode == 'server'


- name: ubuntu - group add regular system user to know Desktop groups
  user:
    name: "{{ metal_deployment.default_user }}"
    groups: adm,cdrom,sudo,dip,plugdev,lpadmin
    append: yes
  when: mode == 'desktop'


- name: ubuntu - install QEMU Guest Agent
  apt:
    state: latest
    pkg: qemu-guest-agent
  when: ansible_virtualization_type == 'kvm' and ansible_virtualization_role == 'guest'
